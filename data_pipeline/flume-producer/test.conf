#This is a test agent, test whether flume interceptors are functional
#Source: TAILDIR, channel: memory, sink: local file (/usr/local/test_sink1, /usr/local/test_sink2)

#Agent
a1.sources=r1
a1.channels=c1 c2
a1.sinks=s1 s2
#Configure source
a1.sources.r1.type=TAILDIR
a1.sources.r1.positionFile=/usr/local/flume/test/log_position.json
a1.sources.r1.filegroups=f1
a1.sources.r1.filegroups.f1=/usr/local/logs/app.+
a1.sources.r1.fileHeader=true

#Intercespors
a1.sources.r1.interceptors=i1 i2 
a1.sources.r1.interceptors.i1.type=com.hz870420904.flume_intercepter.LogETLInterceptor$Builder
a1.sources.r1.interceptors.i2.type=com.hz870420904.flume_intercepter.LogTypeInterceptor$Builder
a1.sources.r1.selector.type=multiplexing
a1.sources.r1.selector.header=topic
a1.sources.r1.selector.mapping.topic_start=c1
a1.sources.r1.selector.mapping.topic_event=c2

#Channels
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

a1.channels.c2.type = memory
a1.channels.c2.capacity = 1000
a1.channels.c2.transactionCapacity = 100

#sink
a1.sinks.s1.type=file_roll
a1.sinks.s1.sink.directory=/usr/local/test_sink1
a1.sinks.s2.type=file_roll
a1.sinks.s2.sink.directory=/usr/local/test_sink2

#bind
a1.sources.r1.channels=c1 c2
a1.sinks.s1.channel=c1
a1.sinks.s2.channel=c2



